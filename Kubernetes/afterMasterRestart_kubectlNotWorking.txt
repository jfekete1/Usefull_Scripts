ON MASTER:
export KUBECONFIG=/etc/kubernetes/kubelet.conf
ping node01

View Certificates:
openssl x509 -in /etc/kubernetes/pki/apiserver.crt -text -noout

ON NODES:
#make sure you can reach the master
ping master
You do not want to use kubeadm reset. That will reset everything and you would have to start configuring your cluster again.

Well, in your scenario, please have a look on the steps below:

nano /etc/hosts (update your new IP against YOUR_HOSTNAME)
vi $KUBECONFIG
change server: https://192.168...
cd /etc/kubernetes
vi controller-manager.conf
change server: https://192.168...
vi kubelet.conf
change server: https://192.168...

ÚJRA KELL GENERÁLNI A KULCSOKAT !!
kubeadm token create --help
kubeadm init phase upload-certs --upload-certs




cd manifests
vi etcd.yaml
:%s/search_string/replacement_string/g
pl.
:%s/120/210/g
vi kube-apiserver.yaml
:%s/120/210/g
vi kube-controller-manager.yaml
:%s/120/210/g
vi kube-scheduler.yaml
:%s/120/210/g



KUBE_MASTER="--master=http://YOUR_HOSTNAME:8080"

KUBE_ETCD_SERVERS="--etcd-servers=http://YOUR_HOSTNAME:2379" #2379 is default port

nano /etc/etcd/etcd.conf (conf related to etcd)

KUBE_ETCD_SERVERS="--etcd-servers=http://YOUR_HOSTNAME/WHERE_EVER_ETCD_HOSTED:2379"

2379 is default port for etcd. and you can have multiple etcd servers defined here comma separated

Restart kubelet, apiserver, etcd services.

It is good to use hostname instead of IP to avoid such scenarios.

Hope it helps!







Otherwise...
kubeadm reset
rm -rf /etc/cni/net.d/
rm -rf /etc/kubernetes
#use join token, to join the cluster
kubeadm join master:6443 --token ... --discovery-token-ca-cert-hash ...
